name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel in-progress runs for the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: true # Don't fail the build on lint errors

      - name: TypeScript type check
        run: npx tsc --noEmit

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY || 'pk_test_dummy' }}
          SKIP_ENV_VALIDATION: true

      - name: Upload Sentry sourcemaps (if configured)
        if: ${{ secrets.SENTRY_AUTH_TOKEN != '' }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_URL: ${{ secrets.SENTRY_URL || 'https://us.sentry.io' }}
        run: |
          curl -sL https://sentry.io/get-cli/ | bash
          RELEASE=${GITHUB_SHA::7}
          sentry-cli releases new "$RELEASE"
          # Upload Next.js client assets sourcemaps
          sentry-cli sourcemaps upload \
            --release "$RELEASE" \
            --url-prefix "~/_next" \
            .next/static || true
          # Upload Next.js server/app sourcemaps
          sentry-cli sourcemaps upload \
            --release "$RELEASE" \
            --url-prefix "~" \
            .next/server/app || true
          sentry-cli releases finalize "$RELEASE"

      - name: Run tests
        run: npm test -- --run
        continue-on-error: true # Don't fail if no tests exist yet

  # Summary comment for PRs
  pr-comment:
    name: PR Status Comment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: code-quality
    
    steps:
      - name: Comment PR Status
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ needs.code-quality.result }}';
            const emoji = status === 'success' ? '✅' : '⚠️';
            const message = `${emoji} **CI Status**: ${status}
            
            Build and type checking ${status === 'success' ? 'passed' : 'completed with warnings'}.
            View details in the [Actions tab](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).`;
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('CI Status')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }
        continue-on-error: true
